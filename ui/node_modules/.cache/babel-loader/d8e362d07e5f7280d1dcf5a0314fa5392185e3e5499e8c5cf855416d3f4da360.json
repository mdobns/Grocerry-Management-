{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'AddNewProduct',\n  emits: ['close'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit; // Parent will listen for this event\n\n    // Modal should always be shown when component is mounted\n    const showModal = ref(true);\n\n    // Product form model\n    const newProduct = ref({\n      product_name: '',\n      ucom_id: '',\n      price_per_unit: ''\n    });\n\n    // List of unit options (ucom)\n    const ucomList = ref([]);\n    const fetchUcomUnits = async () => {\n      try {\n        const res = await fetch('http://127.0.0.1:5000/ucom');\n        ucomList.value = await res.json();\n      } catch (err) {\n        console.error('Failed to load ucom units:', err);\n      }\n    };\n\n    // Get unit name by ID for display (optional helper)\n    const getUcomNameById = id => {\n      const match = ucomList.value.find(u => u.ucom_id === id);\n      return match ? match.ucom_name : '';\n    };\n    const submitProduct = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/products', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newProduct.value)\n        });\n        const result = await response.json();\n        console.log(result);\n        if (result.status === 'success') {\n          // Optional: you can emit new product data to parent here too\n          emit('close'); // Tell parent to hide the modal\n        } else {\n          alert('Failed to add: ' + result.message);\n        }\n      } catch (error) {\n        console.error('Add error:', error);\n        alert('An error occurred while adding the product.');\n      }\n    };\n    onMounted(() => {\n      fetchUcomUnits();\n    });\n    const __returned__ = {\n      emit,\n      showModal,\n      newProduct,\n      ucomList,\n      fetchUcomUnits,\n      getUcomNameById,\n      submitProduct,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","emit","__emit","showModal","newProduct","product_name","ucom_id","price_per_unit","ucomList","fetchUcomUnits","res","fetch","value","json","err","console","error","getUcomNameById","id","match","find","u","ucom_name","submitProduct","response","method","headers","body","JSON","stringify","result","log","status","alert","message"],"sources":["C:/Users/mdobn/Downloads/Grocery management/ui/src/views/AddNewProduct.vue"],"sourcesContent":["<template>\r\n  <!-- Add Product Modal -->\r\n<div v-if=\"showModal\" class=\"modal-overlay\">\r\n  <div class=\"modal\">\r\n    <h2>Add New Product</h2>\r\n    <form @submit.prevent=\"submitProduct\">\r\n      <label>\r\n        Product Name:\r\n        <input v-model=\"newProduct.product_name\" required />\r\n      </label>\r\n\r\n      <label>\r\n        Unit:\r\n        <select v-model=\"newProduct.ucom_id\" required>\r\n          <option value=\"\">-- Select Unit --</option>\r\n          <option v-for=\"unit in ucomList\" :key=\"unit.ucom_id\" :value=\"unit.ucom_id\">\r\n            {{ unit.ucom_name }}\r\n          </option>\r\n        </select>\r\n      </label>\r\n\r\n      <label>\r\n        Price per Unit:\r\n        <input type=\"number\" v-model=\"newProduct.price_per_unit\" required />\r\n      </label>\r\n\r\n      <div class=\"modal-actions\">\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" @click=\"showModal = false\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nconst emit = defineEmits(['close']); // Parent will listen for this event\r\n\r\n// Modal should always be shown when component is mounted\r\nconst showModal = ref(true);\r\n\r\n// Product form model\r\nconst newProduct = ref({\r\n  product_name: '',\r\n  ucom_id: '',\r\n  price_per_unit: ''\r\n});\r\n\r\n// List of unit options (ucom)\r\nconst ucomList = ref([]);\r\n\r\nconst fetchUcomUnits = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:5000/ucom');\r\n    ucomList.value = await res.json();\r\n  } catch (err) {\r\n    console.error('Failed to load ucom units:', err);\r\n  }\r\n};\r\n\r\n// Get unit name by ID for display (optional helper)\r\nconst getUcomNameById = (id) => {\r\n  const match = ucomList.value.find(u => u.ucom_id === id);\r\n  return match ? match.ucom_name : '';\r\n};\r\n\r\nconst submitProduct = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:5000/products', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newProduct.value),\r\n    });\r\n    const result = await response.json();\r\n    console.log(result);\r\n\r\n    if (result.status === 'success') {\r\n      // Optional: you can emit new product data to parent here too\r\n      emit('close'); // Tell parent to hide the modal\r\n    } else {\r\n      alert('Failed to add: ' + result.message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Add error:', error);\r\n    alert('An error occurred while adding the product.');\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchUcomUnits();\r\n});\r\n</script>\r\n\r\n\r\n<style>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0,0,0,0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n}\r\n\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 350px;\r\n  max-width: 90%;\r\n}\r\n\r\n.modal label {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.modal input,\r\n.modal select {\r\n  width: 100%;\r\n  padding: 5px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-actions  {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n</style>"],"mappings":";;AAqCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;;;IACpC,MAAMC,IAAI,GAAGC,MAAsB,CAAC,CAAC;;IAErC;IACA,MAAMC,SAAS,GAAGJ,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACA,MAAMK,UAAU,GAAGL,GAAG,CAAC;MACrBM,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE;IAClB,CAAC,CAAC;;IAEF;IACA,MAAMC,QAAQ,GAAGT,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QACrDH,QAAQ,CAACI,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD;IACF,CAAC;;IAED;IACA,MAAMG,eAAe,GAAIC,EAAE,IAAK;MAC9B,MAAMC,KAAK,GAAGX,QAAQ,CAACI,KAAK,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,OAAO,KAAKY,EAAE,CAAC;MACxD,OAAOC,KAAK,GAAGA,KAAK,CAACG,SAAS,GAAG,EAAE;IACrC,CAAC;IAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAC,gCAAgC,EAAE;UAC7Dc,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACzB,UAAU,CAACQ,KAAK;QACvC,CAAC,CAAC;QACF,MAAMkB,MAAM,GAAG,MAAMN,QAAQ,CAACX,IAAI,CAAC,CAAC;QACpCE,OAAO,CAACgB,GAAG,CAACD,MAAM,CAAC;QAEnB,IAAIA,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;UAC/B;UACA/B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACLgC,KAAK,CAAC,iBAAiB,GAAGH,MAAM,CAACI,OAAO,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCiB,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC;IAEDjC,SAAS,CAAC,MAAM;MACdS,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}