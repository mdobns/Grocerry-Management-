{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'AddNewProduct',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showModal = ref(false);\n    const newProduct = ref({\n      product_name: '',\n      ucom_id: '',\n      price_per_unit: ''\n    });\n    const ucomList = ref([]);\n    const fetchUcomUnits = async () => {\n      try {\n        const res = await fetch('http://127.0.0.1:5000/ucom'); // Add this endpoint in Flask if not already\n        ucomList.value = await res.json();\n      } catch (err) {\n        console.error('Failed to load ucom units:', err);\n      }\n    };\n    const submitProduct = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/products', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newProduct.value)\n        });\n        const result = await response.json();\n        console.log(result);\n        if (result.status === 'success') {\n          products.value.push({\n            ...newProduct.value,\n            product_id: result.product_id,\n            ucom_name: getUcomNameById(newProduct.value.ucom_id)\n          });\n          showModal.value = false;\n          newProduct.value = {\n            product_name: '',\n            ucom_id: '',\n            price_per_unit: ''\n          };\n        } else {\n          alert('Failed to add: ' + result.message);\n        }\n      } catch (error) {\n        console.error('Add error:', error);\n        alert('An error occurred while adding the product.');\n      }\n    };\n    const getUcomNameById = id => {\n      const match = ucomList.value.find(u => u.ucom_id === id);\n      return match ? match.ucom_name : '';\n    };\n    onMounted(() => {\n      fetchUcomUnits();\n    });\n    const __returned__ = {\n      showModal,\n      newProduct,\n      ucomList,\n      fetchUcomUnits,\n      submitProduct,\n      getUcomNameById,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","showModal","newProduct","product_name","ucom_id","price_per_unit","ucomList","fetchUcomUnits","res","fetch","value","json","err","console","error","submitProduct","response","method","headers","body","JSON","stringify","result","log","status","products","push","product_id","ucom_name","getUcomNameById","alert","message","id","match","find","u"],"sources":["C:/Users/mdobn/Downloads/Grocery management/ui/src/views/AddNewProduct.vue"],"sourcesContent":["<template>\r\n  <!-- Add Product Modal -->\r\n<div v-if=\"showModal\" class=\"modal-overlay\">\r\n  <div class=\"modal\">\r\n    <h2>Add New Product</h2>\r\n    <form @submit.prevent=\"submitProduct\">\r\n      <label>\r\n        Product Name:\r\n        <input v-model=\"newProduct.product_name\" required />\r\n      </label>\r\n\r\n      <label>\r\n        Unit:\r\n        <select v-model=\"newProduct.ucom_id\" required>\r\n          <option value=\"\">-- Select Unit --</option>\r\n          <option v-for=\"unit in ucomList\" :key=\"unit.ucom_id\" :value=\"unit.ucom_id\">\r\n            {{ unit.ucom_name }}\r\n          </option>\r\n        </select>\r\n      </label>\r\n\r\n      <label>\r\n        Price per Unit:\r\n        <input type=\"number\" v-model=\"newProduct.price_per_unit\" required />\r\n      </label>\r\n\r\n      <div class=\"modal-actions\">\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"button\" @click=\"showModal = false\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nconst showModal = ref(false);\r\n\r\nconst newProduct = ref({\r\n  product_name: '',\r\n  ucom_id: '',\r\n  price_per_unit: ''\r\n});\r\n\r\nconst ucomList = ref([]);\r\n\r\nconst fetchUcomUnits = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:5000/ucom');  // Add this endpoint in Flask if not already\r\n    ucomList.value = await res.json();\r\n  } catch (err) {\r\n    console.error('Failed to load ucom units:', err);\r\n  }\r\n};\r\n\r\nconst submitProduct = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:5000/products', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newProduct.value),\r\n    });\r\n    const result = await response.json();\r\n    console.log(result);\r\n\r\n    if (result.status === 'success') {\r\n      products.value.push({ ...newProduct.value, product_id: result.product_id, ucom_name: getUcomNameById(newProduct.value.ucom_id) });\r\n      showModal.value = false;\r\n      newProduct.value = { product_name: '', ucom_id: '', price_per_unit: '' };\r\n    } else {\r\n      alert('Failed to add: ' + result.message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Add error:', error);\r\n    alert('An error occurred while adding the product.');\r\n  }\r\n};\r\n\r\nconst getUcomNameById = (id) => {\r\n  const match = ucomList.value.find(u => u.ucom_id === id);\r\n  return match ? match.ucom_name : '';\r\n};\r\n\r\nonMounted(() => {\r\n  fetchUcomUnits();\r\n});\r\n\r\n</script>\r\n\r\n<style>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0,0,0,0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n}\r\n\r\n.modal {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 350px;\r\n  max-width: 90%;\r\n}\r\n\r\n.modal label {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.modal input,\r\n.modal select {\r\n  width: 100%;\r\n  padding: 5px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n</style>"],"mappings":";;;AAqCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;;;;;;IACpC,MAAMC,SAAS,GAAGF,GAAG,CAAC,KAAK,CAAC;IAE5B,MAAMG,UAAU,GAAGH,GAAG,CAAC;MACrBI,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAE;QACxDH,QAAQ,CAACI,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;MAClD;IACF,CAAC;IAED,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,gCAAgC,EAAE;UAC7DQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,UAAU,CAACQ,KAAK;QACvC,CAAC,CAAC;QACF,MAAMY,MAAM,GAAG,MAAMN,QAAQ,CAACL,IAAI,CAAC,CAAC;QACpCE,OAAO,CAACU,GAAG,CAACD,MAAM,CAAC;QAEnB,IAAIA,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;UAC/BC,QAAQ,CAACf,KAAK,CAACgB,IAAI,CAAC;YAAE,GAAGxB,UAAU,CAACQ,KAAK;YAAEiB,UAAU,EAAEL,MAAM,CAACK,UAAU;YAAEC,SAAS,EAAEC,eAAe,CAAC3B,UAAU,CAACQ,KAAK,CAACN,OAAO;UAAE,CAAC,CAAC;UACjIH,SAAS,CAACS,KAAK,GAAG,KAAK;UACvBR,UAAU,CAACQ,KAAK,GAAG;YAAEP,YAAY,EAAE,EAAE;YAAEC,OAAO,EAAE,EAAE;YAAEC,cAAc,EAAE;UAAG,CAAC;QAC1E,CAAC,MAAM;UACLyB,KAAK,CAAC,iBAAiB,GAAGR,MAAM,CAACS,OAAO,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCgB,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC;IAED,MAAMD,eAAe,GAAIG,EAAE,IAAK;MAC9B,MAAMC,KAAK,GAAG3B,QAAQ,CAACI,KAAK,CAACwB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/B,OAAO,KAAK4B,EAAE,CAAC;MACxD,OAAOC,KAAK,GAAGA,KAAK,CAACL,SAAS,GAAG,EAAE;IACrC,CAAC;IAED5B,SAAS,CAAC,MAAM;MACdO,cAAc,CAAC,CAAC;IAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}