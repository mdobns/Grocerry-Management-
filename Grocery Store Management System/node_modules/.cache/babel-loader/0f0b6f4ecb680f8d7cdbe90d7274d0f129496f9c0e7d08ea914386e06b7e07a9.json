{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-overlay fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n};\nconst _hoisted_2 = {\n  class: \"modal\"\n};\nconst _hoisted_3 = [\"value\"];\nimport { ref, onMounted } from 'vue';\nexport default {\n  __name: 'AddNewProduct',\n  emits: ['close', 'added'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const emit = __emit;\n    const newProduct = ref({\n      product_name: '',\n      ucom_id: '',\n      price_per_unit: ''\n    });\n    const ucomList = ref([]);\n    const fetchUcomUnits = async () => {\n      try {\n        const res = await fetch('http://127.0.0.1:5000/ucom');\n        ucomList.value = await res.json();\n      } catch (err) {\n        console.error('Failed to load units:', err);\n      }\n    };\n    const submitProduct = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/products', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newProduct.value)\n        });\n        const result = await response.json();\n        if (result.status === 'success') {\n          emit('added');\n          emit('close');\n          newProduct.value = {\n            product_name: '',\n            ucom_id: '',\n            price_per_unit: ''\n          };\n        } else {\n          alert('Failed to add: ' + result.message);\n        }\n      } catch (error) {\n        alert('An error occurred while adding the product.');\n      }\n    };\n    const cancel = () => {\n      emit('close');\n    };\n    onMounted(() => {\n      fetchUcomUnits();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Add New Product\", -1)), _createElementVNode(\"form\", {\n        onSubmit: _withModifiers(submitProduct, [\"prevent\"])\n      }, [_createElementVNode(\"label\", null, [_cache[3] || (_cache[3] = _createTextVNode(\" Product Name: \")), _withDirectives(_createElementVNode(\"input\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => newProduct.value.product_name = $event),\n        required: \"\"\n      }, null, 512), [[_vModelText, newProduct.value.product_name]])]), _createElementVNode(\"label\", null, [_cache[5] || (_cache[5] = _createTextVNode(\" Unit: \")), _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => newProduct.value.ucom_id = $event),\n        required: \"\"\n      }, [_cache[4] || (_cache[4] = _createElementVNode(\"option\", {\n        value: \"\"\n      }, \"-- Select Unit --\", -1)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ucomList.value, unit => {\n        return _openBlock(), _createElementBlock(\"option\", {\n          key: unit.ucom_id,\n          value: unit.ucom_id\n        }, _toDisplayString(unit.ucom_name), 9, _hoisted_3);\n      }), 128))], 512), [[_vModelSelect, newProduct.value.ucom_id]])]), _createElementVNode(\"label\", null, [_cache[6] || (_cache[6] = _createTextVNode(\" Price per Unit: \")), _withDirectives(_createElementVNode(\"input\", {\n        type: \"number\",\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => newProduct.value.price_per_unit = $event),\n        required: \"\"\n      }, null, 512), [[_vModelText, newProduct.value.price_per_unit]])]), _createElementVNode(\"div\", {\n        class: \"modal-actions\"\n      }, [_cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n        type: \"submit\"\n      }, \"Submit\", -1)), _createElementVNode(\"button\", {\n        type: \"button\",\n        onClick: cancel\n      }, \"Cancel\")])], 32)])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","emit","__emit","newProduct","product_name","ucom_id","price_per_unit","ucomList","fetchUcomUnits","res","fetch","value","json","err","console","error","submitProduct","response","method","headers","body","JSON","stringify","result","status","alert","message","cancel","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_withModifiers","$event","required","_Fragment","_renderList","unit","key","ucom_name","_hoisted_3","type","class","onClick"],"sources":["/home/runner/work/Grocerry-Management-/Grocerry-Management-/Grocery Store Management System/src/views/AddNewProduct.vue"],"sourcesContent":["<template>\n  <div class=\"modal-overlay fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n    <div class=\"modal\">\n      <h2>Add New Product</h2>\n      <form @submit.prevent=\"submitProduct\">\n        <label>\n          Product Name:\n          <input v-model=\"newProduct.product_name\" required />\n        </label>\n\n        <label>\n          Unit:\n          <select v-model=\"newProduct.ucom_id\" required>\n            <option value=\"\">-- Select Unit --</option>\n            <option v-for=\"unit in ucomList\" :key=\"unit.ucom_id\" :value=\"unit.ucom_id\">\n              {{ unit.ucom_name }}\n            </option>\n          </select>\n        </label>\n\n        <label>\n          Price per Unit:\n          <input type=\"number\" v-model=\"newProduct.price_per_unit\" required />\n        </label>\n\n        <div class=\"modal-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" @click=\"cancel\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\n\nconst emit = defineEmits(['close', 'added']);\n\nconst newProduct = ref({\n  product_name: '',\n  ucom_id: '',\n  price_per_unit: ''\n});\n\nconst ucomList = ref([]);\n\nconst fetchUcomUnits = async () => {\n  try {\n    const res = await fetch('http://127.0.0.1:5000/ucom');\n    ucomList.value = await res.json();\n  } catch (err) {\n    console.error('Failed to load units:', err);\n  }\n};\n\nconst submitProduct = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:5000/products', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newProduct.value),\n    });\n    const result = await response.json();\n\n    if (result.status === 'success') {\n      emit('added');\n      emit('close');\n      newProduct.value = { product_name: '', ucom_id: '', price_per_unit: '' };\n    } else {\n      alert('Failed to add: ' + result.message);\n    }\n  } catch (error) {\n    alert('An error occurred while adding the product.');\n  }\n};\n\nconst cancel = () => {\n  emit('close');\n};\n\nonMounted(() => {\n  fetchUcomUnits();\n});\n</script>\n\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0,0,0,0.6);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n\n.modal {\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  width: 350px;\n  max-width: 90%;\n}\n\n.modal label {\n  display: block;\n  margin-bottom: 10px;\n\n}\n\n.modal input,\n.modal select {\n  width: 100%;\n  padding: 5px;\n  margin-top: 5px;\n  margin-bottom: 15px;\n}\n\n.modal-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}